/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ALireE6 extends PE6
{
    private PElire _elire_;

    public ALireE6()
    {
        // Constructor
    }

    public ALireE6(
        @SuppressWarnings("hiding") PElire _elire_)
    {
        // Constructor
        setElire(_elire_);

    }

    @Override
    public Object clone()
    {
        return new ALireE6(
            cloneNode(this._elire_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALireE6(this);
    }

    public PElire getElire()
    {
        return this._elire_;
    }

    public void setElire(PElire node)
    {
        if(this._elire_ != null)
        {
            this._elire_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elire_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._elire_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._elire_ == child)
        {
            this._elire_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._elire_ == oldChild)
        {
            setElire((PElire) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
